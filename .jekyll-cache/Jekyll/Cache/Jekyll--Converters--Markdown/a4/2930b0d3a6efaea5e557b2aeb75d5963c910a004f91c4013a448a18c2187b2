I"!<h1 id="cve-2019-15033---server-side-request-forgery--pydio-community">CVE-2019-15033 - Server Side Request Forgery | Pydio Community</h1>

<h3 id="summary">Summary</h3>

<p>The <a href="https://pydio.com/">Pydio</a> is a “modern file management platform built according to your business needs and regulations.”</p>

<h3 id="description">Description</h3>

<p>Pydio’s main functionality is file upload and sharing. One way to upload is through the “Remote Server” feature, where Pydio makes a request to a remote server on the Internet and downloads the file.</p>

<p><img src="/images/publications/pydio-research/pydio-cve-1.png" alt="Image" /></p>

<p>The problem here is that Pydio does not handle filters properly on the input of this data, allowing a malicious user to enter a URL into an internal address (see also <a href="/2019/09/17/CVE-2019-15032">CVE-2019-15032</a>) that is not directly available to the Internet, such as: http://10.11.18.47:1337/pydio-cve.png</p>

<p>And Pydio, in a successful attempt to make such a request, eventually manages to download a file that is not directly exposed to the Internet, thus resulting in an SSRF - Server Side Request Forgery:</p>

<ul>
  <li>Pydio request:</li>
</ul>

<p><img src="/images/publications/pydio-research/pydio-cve-4.png" alt="Image" /></p>

<ul>
  <li>The internal web server log:</li>
</ul>

<p><img src="/images/publications/pydio-research/pydio-cve-5.png" alt="Image" /></p>

<p>The scenario here is: Pydio is an online application that is exposed directly to the internet, hosted on a server that has routes to the corporate network of the company in question; The Web Server illustrated earlier is a development environment that is not exposed directly to the Internet. Also, through this SSRF we were able to manipulate Pydio to make a request to this internal web server.</p>

<p>-</p>

<p>This vulnerability could be exploited without authentication because another feature of Pydio is the creation and making of folders available for third parties to upload and download files.</p>

<p>An attacker could take advantage of the vulnerability to make Pydio make forged internal IP requests on a network, mapping and accessing files from an internal network - for greater effectiveness, this could be automated and correlated to a list of services and files presumably that the target company uses. In addition, there is a very significant margin of being able to align this SSRF with some specific scenario and achieve a RCE vulnerability.</p>

<h3 id="referencies">Referencies</h3>

<ul>
  <li><a href="https://pydio.com/">https://pydio.com/</a></li>
  <li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15033">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15033</a></li>
  <li><a href="https://sourceforge.net/projects/ajaxplorer/files/pydio/stable-channel/">https://sourceforge.net/projects/ajaxplorer/files/pydio/stable-channel/</a></li>
  <li><a href="https://www.owasp.org/index.php/Server_Side_Request_Forgery">https://www.owasp.org/index.php/Server_Side_Request_Forgery</a></li>
</ul>
:ET